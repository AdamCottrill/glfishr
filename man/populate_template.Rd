% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/populate_template.R
\name{populate_template}
\alias{populate_template}
\title{Populate a GLIS template using the GLIS API}
\usage{
populate_template(
  filters,
  template_database,
  target = NULL,
  overwrite = FALSE,
  prune_fn012 = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{filters}{a named list of filters used to select the project(s)
that will be inserted into the target database.}

\item{template_database}{Character string. The path to the template database
that will be copied and populated with data from GLIS.}

\item{target}{The name of the target (output) database file. If no
target is provide, a name will be built from the filter list.}

\item{overwrite}{\itemize{
\item Boolean. If a file with the same name as target,
should it be overwritten?
}}

\item{prune_fn012}{\itemize{
\item Boolean - should records in the FN012 table
without any matching records in the FN123 (Catch counts) be deleted?
}}

\item{verbose}{\itemize{
\item Boolean. Should progress be reported to the console?
}}
}
\description{
This function accesses the API endpoints exposed by GLIS for the
and populates an template data with the data for projects specified
by the provided filter. By default, the output file is created in
the current working directory, and is named dynamically from the
values of the filter.  Alternatively, the name of the target
database can be provided by the user.  Execution of the function
will be stopped if the template cannot be found or the target
(output) database already exists (unless overwrite=TRUE).
}
\examples{
\dontrun{
populate_template(
  list(prj_cd = "LEA_IA17_097"), "Great_Lakes_Assessment_Template_5.accdb"
)

populate_template(
  list(prj_cd = "LEA_IA23_SHA"), "Great_Lakes_Assessment_Template_5.accdb",
  "IBHN_2023_GLAT5.accdb"
)

populate_template(
  list(prj_cd = "LEA_IA22_093"), "Great_Lakes_Assessment_Template_5.accdb",
  "LPBTW_093_2023.accdb",
  prune_fn012 = TRUE
)
}
}
\author{
Arthur Bonsall \email{arthur.bonsall@ontario.ca}
}
